// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EmergencyWithdraw extends ethereum.Event {
  get params(): EmergencyWithdraw__Params {
    return new EmergencyWithdraw__Params(this);
  }
}

export class EmergencyWithdraw__Params {
  _event: EmergencyWithdraw;

  constructor(event: EmergencyWithdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Harvest extends ethereum.Event {
  get params(): Harvest__Params {
    return new Harvest__Params(this);
  }
}

export class Harvest__Params {
  _event: Harvest;

  constructor(event: Harvest) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateEmissionPartition extends ethereum.Event {
  get params(): UpdateEmissionPartition__Params {
    return new UpdateEmissionPartition__Params(this);
  }
}

export class UpdateEmissionPartition__Params {
  _event: UpdateEmissionPartition;

  constructor(event: UpdateEmissionPartition) {
    this._event = event;
  }

  get basePartition(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get boostedPartition(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdatePool extends ethereum.Event {
  get params(): UpdatePool__Params {
    return new UpdatePool__Params(this);
  }
}

export class UpdatePool__Params {
  _event: UpdatePool;

  constructor(event: UpdatePool) {
    this._event = event;
  }

  get lastRewardTimestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lpSupply(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get accYetiPerShare(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get accYetiPerFactorShare(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UpdateRewardRate extends ethereum.Event {
  get params(): UpdateRewardRate__Params {
    return new UpdateRewardRate__Params(this);
  }
}

export class UpdateRewardRate__Params {
  _event: UpdateRewardRate;

  constructor(event: UpdateRewardRate) {
    this._event = event;
  }

  get rewardRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BoostedFarm__userInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class BoostedFarm extends ethereum.SmartContract {
  static bind(address: Address): BoostedFarm {
    return new BoostedFarm("BoostedFarm", address);
  }

  basePartition(): BigInt {
    let result = super.call("basePartition", "basePartition():(uint256)", []);

    return result[0].toBigInt();
  }

  try_basePartition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "basePartition",
      "basePartition():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  boostedPartition(): BigInt {
    let result = super.call(
      "boostedPartition",
      "boostedPartition():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_boostedPartition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "boostedPartition",
      "boostedPartition():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimableYeti(param0: Address): BigInt {
    let result = super.call(
      "claimableYeti",
      "claimableYeti(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_claimableYeti(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimableYeti",
      "claimableYeti(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deposit(_amount: BigInt): BigInt {
    let result = super.call("deposit", "deposit(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_deposit(_amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("deposit", "deposit(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccYetiPerFactorShare(): BigInt {
    let result = super.call(
      "getAccYetiPerFactorShare",
      "getAccYetiPerFactorShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAccYetiPerFactorShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAccYetiPerFactorShare",
      "getAccYetiPerFactorShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccYetiPerShare(): BigInt {
    let result = super.call(
      "getAccYetiPerShare",
      "getAccYetiPerShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAccYetiPerShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAccYetiPerShare",
      "getAccYetiPerShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lpToken(): Address {
    let result = super.call("lpToken", "lpToken():(address)", []);

    return result[0].toAddress();
  }

  try_lpToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("lpToken", "lpToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingTokens(_user: Address): BigInt {
    let result = super.call(
      "pendingTokens",
      "pendingTokens(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toBigInt();
  }

  try_pendingTokens(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingTokens",
      "pendingTokens(address):(uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewardRate(): BigInt {
    let result = super.call("rewardRate", "rewardRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_rewardRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("rewardRate", "rewardRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sumOfFactors(): BigInt {
    let result = super.call("sumOfFactors", "sumOfFactors():(uint256)", []);

    return result[0].toBigInt();
  }

  try_sumOfFactors(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("sumOfFactors", "sumOfFactors():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userInfo(param0: Address): BoostedFarm__userInfoResult {
    let result = super.call(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new BoostedFarm__userInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_userInfo(
    param0: Address
  ): ethereum.CallResult<BoostedFarm__userInfoResult> {
    let result = super.tryCall(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BoostedFarm__userInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  veYETI(): Address {
    let result = super.call("veYETI", "veYETI():(address)", []);

    return result[0].toAddress();
  }

  try_veYETI(): ethereum.CallResult<Address> {
    let result = super.tryCall("veYETI", "veYETI():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  withdraw(_amount: BigInt): BigInt {
    let result = super.call("withdraw", "withdraw(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_withdraw(_amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("withdraw", "withdraw(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  yeti(): Address {
    let result = super.call("yeti", "yeti():(address)", []);

    return result[0].toAddress();
  }

  try_yeti(): ethereum.CallResult<Address> {
    let result = super.tryCall("yeti", "yeti():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get reward(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class EmergencyYetiWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyYetiWithdrawCall__Inputs {
    return new EmergencyYetiWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyYetiWithdrawCall__Outputs {
    return new EmergencyYetiWithdrawCall__Outputs(this);
  }
}

export class EmergencyYetiWithdrawCall__Inputs {
  _call: EmergencyYetiWithdrawCall;

  constructor(call: EmergencyYetiWithdrawCall) {
    this._call = call;
  }
}

export class EmergencyYetiWithdrawCall__Outputs {
  _call: EmergencyYetiWithdrawCall;

  constructor(call: EmergencyYetiWithdrawCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _yeti(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _veYETI(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _lpToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateEmissionPartitionCall extends ethereum.Call {
  get inputs(): UpdateEmissionPartitionCall__Inputs {
    return new UpdateEmissionPartitionCall__Inputs(this);
  }

  get outputs(): UpdateEmissionPartitionCall__Outputs {
    return new UpdateEmissionPartitionCall__Outputs(this);
  }
}

export class UpdateEmissionPartitionCall__Inputs {
  _call: UpdateEmissionPartitionCall;

  constructor(call: UpdateEmissionPartitionCall) {
    this._call = call;
  }

  get _basePartition(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateEmissionPartitionCall__Outputs {
  _call: UpdateEmissionPartitionCall;

  constructor(call: UpdateEmissionPartitionCall) {
    this._call = call;
  }
}

export class UpdateFactorCall extends ethereum.Call {
  get inputs(): UpdateFactorCall__Inputs {
    return new UpdateFactorCall__Inputs(this);
  }

  get outputs(): UpdateFactorCall__Outputs {
    return new UpdateFactorCall__Outputs(this);
  }
}

export class UpdateFactorCall__Inputs {
  _call: UpdateFactorCall;

  constructor(call: UpdateFactorCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newVeyetiBalance(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateFactorCall__Outputs {
  _call: UpdateFactorCall;

  constructor(call: UpdateFactorCall) {
    this._call = call;
  }
}

export class UpdateRewardRateCall extends ethereum.Call {
  get inputs(): UpdateRewardRateCall__Inputs {
    return new UpdateRewardRateCall__Inputs(this);
  }

  get outputs(): UpdateRewardRateCall__Outputs {
    return new UpdateRewardRateCall__Outputs(this);
  }
}

export class UpdateRewardRateCall__Inputs {
  _call: UpdateRewardRateCall;

  constructor(call: UpdateRewardRateCall) {
    this._call = call;
  }

  get _rewardRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateRewardRateCall__Outputs {
  _call: UpdateRewardRateCall;

  constructor(call: UpdateRewardRateCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get reward(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
